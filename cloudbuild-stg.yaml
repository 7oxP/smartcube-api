steps:
  - name: node
    entrypoint: npm
    args:
      - install
  - name: node
    entrypoint: npm
    args:
      - run
      - test
    env:
      - 'APP_ENV=${_APP_ENV}'
      - 'APP_PORT=${_APP_PORT}'
      - 'DB_HOST=${_DB_HOST}'
      - 'DB_PORT=${_DB_PORT}'
      - 'DB_USER=${_DB_USER}'
      - 'DB_NAME=${_DB_NAME}'
      - 'DB_PASSWORD=${_DB_PASS}'
      - 'DB_DIALECT=${_DB_DIALECT}'
      - 'BUCKET_NAME=${_BUCKET_NAME}'
      - 'JWT_SECRET_KEY=${_JWT_SECRET_KEY}'
      - 'VERIFICATION_SECRET_KEY=${_VERIFICATION_SECRET_KEY}'
      - 'RESET_TOKEN_SECRET_KEY=${_RESET_TOKEN_SECRET_KEY}'
      - 'RESET_PASSWORD_URL=${_RESET_PASSWORD_URL}'
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: gcloud
    args:
      - gsutil
      - cp
      - gs://mqtt-certificate/mqtt-ssl.crt
      - .
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '-t'
      - 'gcr.io/$PROJECT_ID/smartcube-api-stg:$COMMIT_SHA'
      - .
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - 'gcr.io/$PROJECT_ID/smartcube-api-stg:$COMMIT_SHA'
  - name: gcr.io/google.com/cloudsdktool/cloud-sdk
    entrypoint: gcloud
    args:
      - run
      - deploy
      - smartcube-api-stg
      - '--image'
      - 'gcr.io/$PROJECT_ID/smartcube-api-stg:$COMMIT_SHA'
      - '--region'
      - asia-east1
      - '--platform'
      - managed
      - '--allow-unauthenticated'
images:
  - 'gcr.io/$PROJECT_ID/smartcube-api-stg:$COMMIT_SHA'
